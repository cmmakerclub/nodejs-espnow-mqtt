{"version":3,"sources":["app.js"],"names":["a","b","mqtt","require","client","connect","checksum","message","calculatedSum","checkSum","length","i","v","console","log","toString","on","subscribe","topic","slice","mac1","mac2","len","payload"],"mappings":";;;;;;kBAAe,UAACA,CAAD,EAAIC,CAAJ;AAAA,SAAUD,IAAIC,CAAd;AAAA,C;;AACf,IAAMC,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,SAASF,KAAKG,OAAL,CAAa,qBAAb,CAAf;;AAEA,IAAIC,WAAW,SAAXA,QAAW,CAACC,OAAD,EAAa;AAC1B,MAAIC,sBAAJ;AACA,MAAIC,WAAWF,QAAQA,QAAQG,MAAR,GAAiB,CAAzB,CAAf;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,QAAQG,MAAR,GAAiB,CAArC,EAAwCC,GAAxC,EAA6C;AAC3C,QAAIC,IAAIL,QAAQI,CAAR,CAAR;AACAH,qBAAiBI,CAAjB;AACD;AACDC,UAAQC,GAAR,uBAAgCN,cAAcO,QAAd,CAAuB,EAAvB,CAAhC;AACAF,UAAQC,GAAR,kBAA2BL,SAASM,QAAT,CAAkB,EAAlB,CAA3B;AACA,SAAOP,kBAAkBC,QAAzB;AACD,CAVD;;AAYAL,OAAOY,EAAP,CAAU,SAAV,EAAqB,YAAY;AAC/BZ,SAAOa,SAAP,CAAiB,WAAjB;AACD,CAFD;;AAIAb,OAAOY,EAAP,CAAU,SAAV,EAAqB,UAAUE,KAAV,EAAiBX,OAAjB,EAA0B;AAC7CM,UAAQC,GAAR,CAAY,kBAAZ;AACA,MAAIP,QAAQA,QAAQG,MAAR,GAAiB,CAAzB,MAAgC,IAApC,EAA0C;AACxCH,cAAUA,QAAQY,KAAR,CAAc,CAAd,EAAiBZ,QAAQG,MAAR,GAAiB,CAAlC,CAAV;AACD;;AAEDG,UAAQC,GAAR,CAAYP,OAAZ;AACAM,UAAQC,GAAR,CAAY,kBAAZ;AACAD,UAAQC,GAAR,CAAYP,QAAQG,MAApB;;AAEA,MAAIJ,SAASC,OAAT,CAAJ,EAAuB;AACrB,QAAIA,QAAQ,CAAR,MAAe,IAAf,IAAuBA,QAAQ,CAAR,MAAe,IAA1C,EAAgD;AAC9CM,cAAQC,GAAR,CAAYP,OAAZ;AACA,UAAIa,OAAOb,QAAQY,KAAR,CAAc,CAAd,EAAiB,IAAI,CAArB,CAAX;AACA,UAAIE,OAAOd,QAAQY,KAAR,CAAc,IAAI,CAAlB,EAAqB,IAAI,CAAJ,GAAQ,CAA7B,CAAX;AACAN,cAAQC,GAAR,CAAYM,IAAZ,EAAkBC,IAAlB;AACA,UAAIC,MAAMf,QAAQ,IAAI,CAAJ,GAAQ,CAAhB,CAAV;AACA,UAAIgB,UAAUhB,QAAQY,KAAR,CAAc,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAA1B,EAA6BZ,QAAQG,MAAR,GAAiB,CAA9C,CAAd;AACAG,cAAQC,GAAR,YAAqBQ,GAArB,oBAAuCC,QAAQR,QAAR,CAAiB,KAAjB,CAAvC;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA5BD,MA4BO;AACLF,YAAQC,GAAR,CAAY,kBAAZ;AACD;AACF,CAzCD","file":"app.js","sourcesContent":["export default (a, b) => a + b\nconst mqtt = require('mqtt')\nconst client = mqtt.connect('mqtt://mqtt.cmmc.io')\n\nlet checksum = (message) => {\n  let calculatedSum\n  let checkSum = message[message.length - 1]\n  for (let i = 0; i < message.length - 1; i++) {\n    let v = message[i]\n    calculatedSum ^= v\n  }\n  console.log(`calculated sum = ${calculatedSum.toString(16)}`)\n  console.log(`check sum = ${checkSum.toString(16)}`)\n  return calculatedSum === checkSum\n}\n\nclient.on('connect', function () {\n  client.subscribe('/espnow/#')\n})\n\nclient.on('message', function (topic, message) {\n  console.log('================')\n  if (message[message.length - 1] === 0x0d) {\n    message = message.slice(0, message.length - 1)\n  }\n\n  console.log(message)\n  console.log('================')\n  console.log(message.length)\n\n  if (checksum(message)) {\n    if (message[0] === 0xfc && message[1] === 0xfd) {\n      console.log(message)\n      let mac1 = message.slice(2, 2 + 6)\n      let mac2 = message.slice(2 + 6, 2 + 6 + 6)\n      console.log(mac1, mac2)\n      let len = message[2 + 6 + 6]\n      let payload = message.slice(2 + 6 + 6 + 1, message.length - 1)\n      console.log(`len = ${len}, payload = ${payload.toString('hex')}`)\n      // if (checksum(payload)) {\n      //   console.log('YAY!')\n      // }\n    }\n    //   if (message[0] === 0xff && message[1] === 0xfa) {\n    //     let type = message.slice(2, 5)\n    //     let name = message.slice(5, 11)\n    //     let mac = message.slice(27, 27 + 6)\n    //\n    //     console.log(`type = `, type)\n    //     console.log(`name = `, name.toString())\n    //     console.log(`val1 = `, message.readUInt32LE(11))\n    //     console.log(`val2 = `, message.readUInt32LE(15))\n    //     console.log(`val3 = `, message.readUInt32LE(19))\n    //     console.log(`batt = `, message.readUInt32LE(23))\n    //     console.log(`mac = `, mac.toString('hex'))\n    //   } else {\n    //     console.log('invalid header')\n    //   }\n  } else {\n    console.log('invalid checksum')\n  }\n})\n"],"sourceRoot":"/Users/nat/espnow-mqtt/dist"}